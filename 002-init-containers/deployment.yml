apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-pvc
spec:
  resources:
    requests:
      storage: "2Gi"
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-002
spec:
  selector:
    matchLabels:
      app: nginx-002
  template:
    metadata:
      labels:
        app: nginx-002
    spec:
      volumes:
        - name: nginx-volume
          persistentVolumeClaim:
            claimName: nginx-pvc
            readOnly: false
      initContainers:
        - name: builder
          image: alpine/git
          command: ["sh", "-c", "git clone https://github.com/pablo-moreno/pablo-moreno.github.io.git web && cd web && git checkout gh-pages && rm -rf /code/* && cp -r * /code"]
          volumeMounts:
            - name: nginx-volume
              mountPath: /code
      containers:
      - name: nginx
        image: nginx:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
          - name: nginx-volume
            mountPath: /usr/share/nginx/html/
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-002
spec:
  selector:
    app: nginx-002
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-002
  labels:
    name: ingress-002
spec:
  rules:
  - host: 002.k8s.local
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-002
            port: 
              number: 80
